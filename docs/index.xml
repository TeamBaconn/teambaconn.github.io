<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>BaconGameDev's Blog</title><link>https://teambaconn.github.io/</link><description>Recent content on BaconGameDev's Blog</description><generator>Hugo -- 0.145.0</generator><language>en</language><lastBuildDate>Fri, 02 May 2025 14:07:27 +0700</lastBuildDate><atom:link href="https://teambaconn.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Bacon Combo Graph</title><link>https://teambaconn.github.io/plugin/combo-graph/overview/</link><pubDate>Fri, 02 May 2025 14:07:27 +0700</pubDate><guid>https://teambaconn.github.io/plugin/combo-graph/overview/</guid><description>Bacon Combo Graph is an Unreal Engine plugin (UE5.4+) designed to help you build complex, animation-driven combat systems fast and easy</description></item><item><title>Changelog</title><link>https://teambaconn.github.io/plugin/combo-graph/changelog/</link><pubDate>Thu, 01 May 2025 14:07:27 +0700</pubDate><guid>https://teambaconn.github.io/plugin/combo-graph/changelog/</guid><description>&lt;h2 id="112-latest-on-fab">1.1.2 (Latest on FAB)&lt;/h2>
&lt;h4 id="compatibility">Compatibility&lt;/h4>
&lt;ul>
&lt;li>UE &lt;code>5.4&lt;/code> – &lt;code>5.5&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="bug-fixes">Bug Fixes&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>feat&lt;/strong>: Fix crash when activating context ability which the ASC is on the PlayerState not the Character / Pawn.&lt;/li>
&lt;li>&lt;strong>Note&lt;/strong>: Keep in mind, &lt;code>GetAvatarActor&lt;/code> function of the ASC must return the Character / Pawn. If it return something else such as &lt;strong>PlayerState&lt;/strong>, some of the functions in this plugin will be broken.
There are 2 ways to fix this, change your avatar actor to the character or change the code in my plugin to adapt with your &amp;ldquo;Avatar Actor&amp;rdquo; version.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="111">1.1.1&lt;/h2>
&lt;h4 id="compatibility-1">Compatibility&lt;/h4>
&lt;ul>
&lt;li>UE &lt;code>5.4&lt;/code> – &lt;code>5.5&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="bug-fixes-1">Bug Fixes&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>feat&lt;/strong>: Add UActionPass_ActivateGenericAbility to activate normal UGameplayAbility. UActionPass_ActivateAbility will only be able to activate
ability derived from UContextAbility class.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="11">1.1&lt;/h2>
&lt;h4 id="compatibility-2">Compatibility&lt;/h4>
&lt;ul>
&lt;li>UE &lt;code>5.4&lt;/code> – &lt;code>5.5&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="bug-fixes-2">Bug Fixes&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>fix&lt;/strong>: Support multiple damage notifies in a single frame.&lt;br>
Previously only one notify could trigger per frame; this update ensures all overlapping notifies are processed correctly.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="10">1.0&lt;/h2>
&lt;h4 id="compatibility-3">Compatibility&lt;/h4>
&lt;ul>
&lt;li>UE &lt;code>5.4&lt;/code> – &lt;code>5.5&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="new-features">New Features&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>feat&lt;/strong>: Initial release of ComboGraph.
&lt;ul>
&lt;li>Visual graph editor for designing combo sequences.&lt;/li>
&lt;li>Directional branching, animation timing, and input buffering.&lt;/li>
&lt;li>Runtime component for execution in both C++ and Blueprints.&lt;/li>
&lt;li>Includes demo map: &lt;code>L_Demo&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Documentation</title><link>https://teambaconn.github.io/plugin/combo-graph/documentation/</link><pubDate>Wed, 30 Apr 2025 16:58:27 +0700</pubDate><guid>https://teambaconn.github.io/plugin/combo-graph/documentation/</guid><description>&lt;h1 id="-usage-modes--read-before-using">⚠️ Usage Modes – Read Before Using&lt;/h1>
&lt;p>This plugin supports &lt;strong>two modes&lt;/strong>, and setup/implementation may differ depending on the mode. These differences will be clearly annotated in the documentation as &lt;strong>GAS&lt;/strong> or &lt;strong>Generic&lt;/strong> use cases:&lt;/p>
&lt;span style="
background-color: #FFD700;
padding: 2px 4px;
margin: 1px;
border-radius: 2px;
font-size: 95%;
">
&lt;span style="
color: black;
font-weight: ;
">
Choose the mode that best fits your project setup.
&lt;/span>
&lt;/span>
&lt;ul>
&lt;li>&lt;strong>GAS Mode&lt;/strong> (Recommended):&lt;br>
✅ Works well with Gameplay Ability System&lt;br>
✅ Full feature support&lt;br>
✅ Built-in replication via GAS&lt;/li>
&lt;/ul>
&lt;br />
&lt;ul>
&lt;li>&lt;strong>Generic Mode&lt;/strong>:&lt;br>
✅ Full feature support&lt;br>
❌ &lt;strong>No replication support&lt;/strong> – manual replication is required if needed&lt;/li>
&lt;/ul>
&lt;h1 id="node-types">Node Types&lt;/h1>
&lt;hr>
&lt;h2 id="root-node">Root Node&lt;/h2>
&lt;p>Root node is the starting point of the graph. When the graph resets, it returns to this node.&lt;/p></description></item><item><title>Quick Start</title><link>https://teambaconn.github.io/plugin/combo-graph/quick-start/</link><pubDate>Wed, 30 Apr 2025 14:21:27 +0700</pubDate><guid>https://teambaconn.github.io/plugin/combo-graph/quick-start/</guid><description>&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/oyybI_qCwcw?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div>
&lt;p>&lt;em>- You can watch the tutorial video and follow the text version below.&lt;/em>&lt;/p>
&lt;h2 id="1-prepare-your-acharacter">1. Prepare your ACharacter&lt;/h2>
&lt;p>Make sure your Character blueprint or C++ has these components added:&lt;/p>
&lt;ul>
&lt;li>&lt;code>AnimationDrivenComponent&lt;/code> – For listening to animation montage data and signaling it to other systems (e.g., gameplay abilities)&lt;/li>
&lt;li>&lt;code>ComboManagerComponent&lt;/code> – For managing the combo graph&lt;/li>
&lt;/ul>
&lt;p>
&lt;span style="
background-color: red;
padding: 2px 4px;
margin: 1px;
border-radius: 2px;
font-size: 95%;
">
&lt;span style="
color: white;
font-weight: bold;
">
IMPORTANT!!!
&lt;/span>
&lt;/span>
&lt;br>
&lt;br>
&lt;span style="
background-color: #FFD700;
padding: 2px 4px;
margin: 1px;
border-radius: 2px;
font-size: 95%;
">
&lt;span style="
color: black;
font-weight: bold;
">
For GAS Users
&lt;/span>
&lt;/span>
&lt;/p></description></item><item><title>[Unreal] External Knowledge</title><link>https://teambaconn.github.io/unreal-post/external-resources/</link><pubDate>Tue, 08 Apr 2025 16:37:58 +0700</pubDate><guid>https://teambaconn.github.io/unreal-post/external-resources/</guid><description>A collection of valuable resources for Unreal Engine developers, covering general knowledge, multiplayer, GAS, and advanced debugging tools</description></item><item><title>[Unreal] Animation Driven System</title><link>https://teambaconn.github.io/unreal-post/animation-driven/</link><pubDate>Wed, 02 Apr 2025 17:19:13 +0700</pubDate><guid>https://teambaconn.github.io/unreal-post/animation-driven/</guid><description>A general overview of animation-driven systems in game development, along with practical tips and implementation strategies for building them using GAS.</description></item><item><title>[Unreal] Using Gameplay Tags with GAS</title><link>https://teambaconn.github.io/unreal-post/gameplay-tag/</link><pubDate>Sat, 22 Mar 2025 21:49:26 +0700</pubDate><guid>https://teambaconn.github.io/unreal-post/gameplay-tag/</guid><description>Gotcha tips you might not know when using Gameplay Tags with GAS</description></item><item><title>Tuong Nguyen - Game Developer Portfolio</title><link>https://teambaconn.github.io/posts/portfolio/</link><pubDate>Thu, 20 Mar 2025 11:07:57 +0700</pubDate><guid>https://teambaconn.github.io/posts/portfolio/</guid><description>I am a game developer specializing in systems and gameplay programming in Unreal and Unity, focused on writing efficient, clean code and tackling new challenges in game development.</description></item></channel></rss>